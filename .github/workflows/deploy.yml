name: Deploy to IPFS with IPNS

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      cid: ${{ steps.deploy.outputs.cid }}
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Set Build ID
        run: echo "NEXT_PUBLIC_BUILD_ID=$(date +%s)" >> $GITHUB_ENV

      - run: npm ci
      - run: npm run build

      - id: deploy
        uses: storacha/add-to-web3@v3
        with:
          path_to_add: "out"
          secret_key: ${{ secrets.STORACHA_KEY }}
          proof: ${{ secrets.STORACHA_PROOF }}

      - name: Check for required IPNS secrets
        run: |
          if [ -z "${{ secrets.IPNS_NAME }}" ] || [ -z "${{ secrets.IPNS_KEY_DATA }}" ]; then
            exit 1
          fi

      - name: Update IPNS record with w3name
        run: |
          npm install w3name
          cat > update-ipns.js << 'EOF'
          const w3name = require('w3name');

          async function main() {
            const CID = process.env.NEW_CID;
            const ipnsName = process.env.IPNS_NAME;
            const keyData = process.env.IPNS_KEY_DATA;
            
            if (!CID || !ipnsName || !keyData) {
              process.exit(1);
            }
            
            const value = `/ipfs/${CID}`;
            
            try {
              const keyBytes = Buffer.from(keyData, 'base64');
              const name = await w3name.from(keyBytes);
              
              let revision;
              try {
                const currentRevision = await w3name.resolve(name);
                revision = await w3name.increment(currentRevision, value);
              } catch (err) {
                revision = await w3name.v0(name, value);
              }
              
              await w3name.publish(revision, name.key);
            } catch (err) {
              process.exit(1);
            }
          }

          main().catch(() => process.exit(1));
          EOF

          node update-ipns.js
        env:
          NEW_CID: ${{ steps.deploy.outputs.cid }}
          IPNS_KEY_DATA: ${{ secrets.IPNS_KEY_DATA }}
          IPNS_NAME: ${{ secrets.IPNS_NAME }}
